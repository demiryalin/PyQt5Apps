#!/usr/bin/python3
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui_robot_coontrol.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import rospy
from geometry_msgs.msg import Twist
from nav_msgs.msg import Odometry


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(565, 385)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 0, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setObjectName("label_4")
        self.gridLayout_2.addWidget(self.label_4, 0, 1, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.button_dur = QtWidgets.QPushButton(self.centralwidget)
        self.button_dur.setObjectName("button_dur")
        self.gridLayout.addWidget(self.button_dur, 1, 2, 1, 1)
        self.button_ileri = QtWidgets.QPushButton(self.centralwidget)
        self.button_ileri.setObjectName("button_ileri")
        self.gridLayout.addWidget(self.button_ileri, 0, 2, 1, 1)
        self.button_sol = QtWidgets.QPushButton(self.centralwidget)
        self.button_sol.setObjectName("button_sol")
        self.gridLayout.addWidget(self.button_sol, 1, 0, 1, 1)
        self.button_geri = QtWidgets.QPushButton(self.centralwidget)
        self.button_geri.setObjectName("button_geri")
        self.gridLayout.addWidget(self.button_geri, 2, 2, 1, 1)
        self.button_sag = QtWidgets.QPushButton(self.centralwidget)
        self.button_sag.setObjectName("button_sag")
        self.gridLayout.addWidget(self.button_sag, 1, 3, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.etiket_linear = QtWidgets.QLabel(self.centralwidget)
        self.etiket_linear.setObjectName("etiket_linear")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.etiket_linear)
        self.etiket_acisal = QtWidgets.QLabel(self.centralwidget)
        self.etiket_acisal.setObjectName("etiket_acisal")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.etiket_acisal)
        self.line_acisal = QtWidgets.QLineEdit(self.centralwidget)
        self.line_acisal.setReadOnly(True)
        self.line_acisal.setObjectName("line_acisal")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.line_acisal)
        self.line_linear = QtWidgets.QLineEdit(self.centralwidget)
        self.line_linear.setReadOnly(True)
        self.line_linear.setObjectName("line_linear")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.line_linear)
        self.gridLayout_2.addLayout(self.formLayout, 1, 1, 1, 1)
        self.etiket_konum = QtWidgets.QLabel(self.centralwidget)
        self.etiket_konum.setObjectName("etiket_konum")
        self.gridLayout_2.addWidget(self.etiket_konum, 2, 1, 1, 1)
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        self.etiket_x = QtWidgets.QLabel(self.centralwidget)
        self.etiket_x.setObjectName("etiket_x")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.etiket_x)
        self.kine_x = QtWidgets.QLineEdit(self.centralwidget)
        self.kine_x.setReadOnly(True)
        self.kine_x.setObjectName("kine_x")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.kine_x)
        self.etiket_y = QtWidgets.QLabel(self.centralwidget)
        self.etiket_y.setObjectName("etiket_y")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.etiket_y)
        self.line_y = QtWidgets.QLineEdit(self.centralwidget)
        self.line_y.setReadOnly(True)
        self.line_y.setObjectName("line_y")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.line_y)
        self.gridLayout_2.addLayout(self.formLayout_2, 3, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 565, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Robot Control"))
        self.label.setText(_translate("MainWindow", "Robot Control"))
        self.label_4.setText(_translate("MainWindow", "Velocity Monitoring"))
        self.button_dur.setText(_translate("MainWindow", "Stop"))
        self.button_ileri.setText(_translate("MainWindow", "Forward"))
        self.button_sol.setText(_translate("MainWindow", "Left"))
        self.button_geri.setText(_translate("MainWindow", "Back"))
        self.button_sag.setText(_translate("MainWindow", "Right"))
        self.etiket_linear.setText(_translate("MainWindow", "Linear Vel: "))
        self.etiket_acisal.setText(_translate("MainWindow", "Angular Vel:"))
        self.etiket_konum.setText(_translate("MainWindow", "Position Monitoring"))
        self.etiket_x.setText(_translate("MainWindow", "Position X:"))
        self.etiket_y.setText(_translate("MainWindow", "Position Y"))
        rospy.init_node("robot_control_gui_node")
        self.pub = rospy.Publisher("cmd_vel", Twist, queue_size=10)
        self.vel_msg = Twist()
        rospy.Subscriber("odom", Odometry, self.odomCallback)
        self.button_dur.clicked.connect(self.robotDur)
        self.button_ileri.clicked.connect(self.robotIleri)
        self.button_sag.clicked.connect(self.robotSag)
        self.button_sol.clicked.connect(self.robotSol)
        self.button_geri.clicked.connect(self.robotGeri)

        self.line_acisal.setText(str(0.0))
        self.line_linear.setText(str(0.0))
        self.kine_x.setText(str(0.0))
        self.line_y.setText(str(0.0))

    def odomCallback(self, odom_data):
        self.kine_x.setText(str(odom_data.pose.pose.position.x))
        self.line_y.setText(str(odom_data.pose.pose.position.y))

    def robotDur(self):
        self.vel_msg.linear.x = 0.0
        self.vel_msg.linear.y = 0.0
        self.pub.publish(self.vel_msg)
        self.line_linear.setText(str(self.vel_msg.linear.x))
        self.line_acisal.setText(str(self.vel_msg.angular.z))

    def robotIleri(self):
        self.vel_msg.linear.x = 1.0
        self.vel_msg.linear.y = 0.0
        self.pub.publish(self.vel_msg)
        self.line_linear.setText(str(self.vel_msg.linear.x))
        self.line_acisal.setText(str(self.vel_msg.angular.z))

    def robotGeri(self):
        self.vel_msg.linear.x = -1.0
        self.vel_msg.linear.y = 0.0
        self.pub.publish(self.vel_msg)
        self.line_linear.setText(str(self.vel_msg.linear.x))
        self.line_acisal.setText(str(self.vel_msg.angular.z))

    def robotSol(self):
        self.vel_msg.linear.x = 0.0
        self.vel_msg.linear.y = 0.5
        self.pub.publish(self.vel_msg)
        self.line_linear.setText(str(self.vel_msg.linear.x))
        self.line_acisal.setText(str(self.vel_msg.angular.z))

    def robotSag(self):
        self.vel_msg.linear.x = 0.0
        self.vel_msg.linear.y = -0.5
        self.pub.publish(self.vel_msg)
        self.line_linear.setText(str(self.vel_msg.linear.x))
        self.line_acisal.setText(str(self.vel_msg.angular.z))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
